{
  "HTMLproblems": [{
      "id": 1,
      "category": "HTML",
      "point": 100,
      "question": "다음은 <a> 태그의 target 속성에 대한 설명들이다. 이 중 옳지 않은 것은?",
      "description": "\n  1. target 속성의 값은 프레임의 이름으로 <frame> 태그에서 미리 정의한 후 사용한다.\n    만약 정의되지 않은 프레임 이름을 지정하면, 현재 자신의 프레임에 링크된 문서가 나타난다.\n  2. target=\"_blank\"로 지정하면 새로운 웹 브라우저 창이 뜨면서 링크된 문서가 나타난다.\n  3. target=\"_top\"으로 지정하면 현재의 브라우저 창에 나뉘어진 프레임이 없어지고,\n    다음 페이지로 링크된 문서가 나타난다.\n  4. target=\"_self\"는 현재 자신의 프레임에 링크된 문서가 나타난다.\n    base target이 정의되지 않았을 때, \"_self\"는 target의 기본값 이다.\n",
      "choice": [
        "1",
        "2",
        "3",
        "4"
      ],
      "answer": "1"
    },
    {
      "id": 2,
      "category": "HTML",
      "point": 100,
      "question": "이미지 관련 태그와 그 속성들에 대한 설명 중 옳은 것은?",
      "description": "\n  1. 웹 페이지에 이미지를 삽입할 때는 GIF 이외의 형식은 원래의 크기를 변경할 수 없다.\n  2. 이미지 좌우의 여백 간격을 조정하기 위해서는 <img>의 vspace속성에 픽셀(Pixel)값을 주면 된다.\n  3. 이미지 좌우에 여러 줄의 텍스트를 나타내고자 할 때,\n    정렬값은 align=\"left | center | right\" 이고,\n    그 때 여러 줄의 텍스트가 이미지 중간부분부터 시작하기를 원할 때는\n    align=\"middle\" 속성을 같이 쓰면 된다.\n  4. <`img src=abc.gif`>로 이미지를 불러 들이면, 이미지는 보더없이 나타난다.\n",
      "choice": [
        "1",
        "2",
        "3",
        "4"
      ],
      "answer": "4"
    },
    {
      "id": 3,
      "category": "HTML",
      "point": 100,
      "question": "다음 설명 중 옳지 않은 것을 하나 고르시오.",
      "description": "\n  1. <hn> 태그는 <`h1`>, <`h2`>, <`h3`>, <`h4`>, <`h5`>, <`h6`> 여섯개가 있다.\n  2. <font>태그는 'size=n'이라는 속성을 이용하여 그 크기를 조절한다. 이때 n의 값이 클수록 글자크기는 커진다.\n  3. <font>태그의 'size=n' 속성을 생략하면 기본값 size=3이 적용된다.\n  4. <hn>태그는 제목을 표현할때 주로 사용한다. 이때 n의 값이 클수록 글자크기는 커진다.\n",
      "choice": [
        "1",
        "2",
        "3",
        "4"
      ],
      "answer": "4"
    },
    {
      "id": 4,
      "category": "HTML",
      "point": 100,
      "question": "다음 입력 양식과 관련된 태그와 속성에 대한 설명 중 잘못된 것은?",
      "description": "\n  1. <font>태그의 size=n 속성을 사용하여 글자 크기를 조절할수 있다.\n    n은 수치를 직접 입력하여도 좋고 상대크기(예“+3”)도 가능하다.\n    하지만 -3 또는 -1처럼 음수의 상대크기값은 사용할 수 없다.\n  2. 문자 강조를 위한 태그 <em>과 <i>는 실제적으로 같은 출력을 갖는다.\n  3. <hn>태그는 제목을 표현할 때 주로 사용한다.\n    이때 n의 값이 작을수록 글자크기는 커진다.\n  4. <hn>태그는 <`h1`>, <`h2`>, <`h3`>, <`h4`>, <`h5`>, <`h6`> 여섯개가 있다.\n",
      "choice": [
        "1",
        "2",
        "3",
        "4"
      ],
      "answer": "1"
    },
    {
      "id": 5,
      "category": "HTML",
      "point": 100,
      "question": "다음 설명 중 옳지 않은 것을 하나 고르시오.",
      "description": "\n  1. <`input`>의 maxlength 속성은 사용자가 입력할 수 있는 최대문자수를 말하고, size 속성의 값보다 클 수는 없다.\n  2. checked 속성은 TYPE이 radio나 checkbox일 때 사용하고,\n    checkbox의 경우, 하나 이상 요소에 checked를 지정할 수 있다.\n  3. disabled는 사용자가 입력을 하지 못하도록 하는 속성이고,\n    disabled 입력 요소들은, tab 키로 이동할 수 있게 하는 tabindex를 갖지 않는다.\n  4. <`input`> 태그로 버튼 모양을 나타낼 수 있는 type은 submit, reset, button이다.\n",
      "choice": [
        "1",
        "2",
        "3",
        "4"
      ],
      "answer": "1"
    },
    {
      "id": 6,
      "category": "HTML",
      "point": 100,
      "question": "HTML태그와 태그에 대한 설명이 연결되어 있다. 연결이 서로 맞는 것은?",
      "description": "<code>\n  1. <blockquote> - 문서의 일부분을 인용할 때 쓰는 태그로 single-side이다.\n  2. <div> - <div align=\"center\">라고 쓸 수 있다.\n  3. <span> - 문서의 특정한 부분을 그룹으로 지정하는 태그로 그룹을 지정하면 그룹 앞, 뒤를 한줄 줄바꿈을 한다.\n  4. <br> - 태그를 연속적으로 써도 <br> 기능이 1개 밖에 인식한지 않는다.\n</code>",
      "choice": [
        "1",
        "2",
        "3",
        "4"
      ],
      "answer": "2"
    },
    {
      "id": 7,
      "category": "HTML",
      "point": 100,
      "question": "아래와 같이 테이블을 구현하려고 할 때, 다음 설명 중 옳은 것은?",
      "description": "<code>\n  1. 이 테이블의 2행과 3행을 정의하는 <tr>~</tr>내에 Cell을 정의하는 <td>는 각각 3번씩 이루어졌다.\n  2. 2행 2열에서 colspan을 사용하고, 2행 3열에서 rowspan을 이용하여 3행으로 확장하였다.\n  3. 2행 2열은 &#45; Cell의 내용이 키보드를 통해 입력한 공백 이외의 아무 데이터도 포함되어 있지 않다.\n  4. 2행 2열을 제외한 나머지 Cell은 <td></td>로 코딩되는 Blank Cell을 이용하였다.\n</code>",
      "choice": [
        "1",
        "2",
        "3",
        "4"
      ],
      "answer": "3"
    },
    {
      "id": 8,
      "category": "HTML",
      "point": 100,
      "question": "다음 중에서 페이지의 로딩과 함께 사운드파일이 배경음악처럼 자동으로 실행되어 무한반복실행이 가능하게 한 예를 고르시오. 단, 화면에 볼륨이나 멈춤등을 제어하는 버튼들을 보이지 않게 한다.",
      "description": "<code>\n  1. `<EMBED SRC=\"music.wav\" AUTOSTART=TRUE HIDDEN=TRUE>`\n  2. `<EMBED SRC=\"music.wav\" LOOP=TRUE WIDTH=150 HEIGHT=100>`\n  3. `<EMBED SRC=\"music.wav\" AUTOSTART=TRUE LOOP=TRUE HIDDEN=TRUE>`\n  4. `<EMBED SRC=\"music.wav\" LOOP=TRUE BORDER=0>`\n</code>",
      "choice": [
        "1",
        "2",
        "3",
        "4"
      ],
      "answer": "3"
    },
    {
      "id": 9,
      "category": "HTML",
      "point": 100,
      "question": "다음 중 화면출력 결과에 영향을 주지 않는 HTML 문서내에 설명문을 기술하고자 할 때 그 사용이 옳은 것은?",
      "description": "<code>\n  1. <- 설명문 ->\n  2. <!-- 설명문 -->\n  3. /* 설명문 */\n  4. //설명문\n</code>",
      "choice": [
        "1",
        "2",
        "3",
        "4"
      ],
      "answer": "2"
    },
    {
      "id": 10,
      "category": "HTML",
      "point": 100,
      "question": "다음 중 함께 사용되는 태그끼리 연결된 것이 아닌 것은?",
      "description": "<code>\n  1. <`object`>, <`param`>\n  2. <`form`>, <`select`>, <`option`>\n  3. <`frameset`>, <`frame`>, <`iframe`>\n  4. <`table`>, <`th`>, <`tr`>, <`td`>\n</code>",
      "choice": [
        "1",
        "2",
        "3",
        "4"
      ],
      "answer": "3"
    }
  ],

  "CSSproblems": [{
      "id": 1,
      "category": "CSS",
      "point": 100,
      "question": "아래 코드의 실행 결과는?",
      "description": "<code>const Animal = (function () {\n  let _animal = '';\n  function Animal(name) {\n    _animal = name;\n  }\n  \n  Animal.prototype.bark = function () {\n    console.log(`${_animal} says WOOF!`);\n  }\n  return Animal;\n}());\n\nconst doggy = new Animal('doggy');\ndoggy.bark();</code>",
      "choice": [
        "doggy says WOOF!",
        "SyntaxError",
        "undefined",
        "referenceError"
      ],
      "answer": "doggy says WOOF!"
    },
    {
      "id": 2,
      "category": "CSS",
      "point": 100,
      "question": "아래 코드의 실행 결과는?",
      "description": "<code>const Animal = (function () {\n  let _animal = '';\n  function Animal(name) {\n    _animal = name;\n  }\n  \n  Animal.prototype.bark = function () {\n    console.log(`${_animal} says WOOF!`);\n  }\n  return Animal;\n}());\n\nconst doggy = new Animal('doggy');\ndoggy.bark();</code>",
      "choice": [
        "doggy says WOOF!",
        "SyntaxError",
        "undefined",
        "referenceError"
      ],
      "answer": "doggy says WOOF!"
    },
    {
      "id": 3,
      "category": "CSS",
      "point": 100,
      "question": "아래 코드의 실행 결과는?",
      "description": "<code>const Animal = (function () {\n  let _animal = '';\n  function Animal(name) {\n    _animal = name;\n  }\n  \n  Animal.prototype.bark = function () {\n    console.log(`${_animal} says WOOF!`);\n  }\n  return Animal;\n}());\n\nconst doggy = new Animal('doggy');\ndoggy.bark();</code>",
      "choice": [
        "doggy says WOOF!",
        "SyntaxError",
        "undefined",
        "referenceError"
      ],
      "answer": "doggy says WOOF!"
    }
  ],

  "JSproblems": [{
      "id": 1,
      "category": "Javascript",
      "point": 100,
      "question": "아래 코드의 실행 결과는?",
      "description": "<code>const Animal = (function () {\n  let _animal = '';\n  function Animal(name) {\n    _animal = name;\n  }\n  \n  Animal.prototype.bark = function () {\n    console.log(`${_animal} says WOOF!`);\n  }\n  return Animal;\n}());\n\nconst doggy = new Animal('doggy');\ndoggy.bark();</code>",
      "choice": [
        "doggy says WOOF!",
        "SyntaxError",
        "undefined",
        "referenceError"
      ],
      "answer": "doggy says WOOF!"
    },
    {
      "id": 2,
      "category": "Javascript",
      "point": 100,
      "question": "아래 코드의 실행 결과는?",
      "description": "<code>const Animal = (function () {\n  let _animal = '';\n  function Animal(name) {\n    _animal = name;\n  }\n  \n  Animal.prototype.bark = function () {\n    console.log(`${_animal} says WOOF!`);\n  }\n  return Animal;\n}());\n\nconst doggy = new Animal('doggy');\ndoggy.bark();</code>",
      "choice": [
        "doggy says WOOF!",
        "SyntaxError",
        "undefined",
        "referenceError"
      ],
      "answer": "doggy says WOOF!"
    },
    {
      "id": 3,
      "category": "Javascript",
      "point": 100,
      "question": "아래 코드의 실행 결과는?",
      "description": "<code>const Animal = (function () {\n  let _animal = '';\n  function Animal(name) {\n    _animal = name;\n  }\n  \n  Animal.prototype.bark = function () {\n    console.log(`${_animal} says WOOF!`);\n  }\n  return Animal;\n}());\n\nconst doggy = new Animal('doggy');\ndoggy.bark();</code>",
      "choice": [
        "doggy says WOOF!",
        "SyntaxError",
        "undefined",
        "referenceError"
      ],
      "answer": "doggy says WOOF!"
    }
  ]
}